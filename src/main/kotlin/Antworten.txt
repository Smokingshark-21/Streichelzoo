1. Was ist eine Klasse und wozu braucht man Klassen?

Antwort:
Klassen dienen dazu das project übersichtlich und modular zu gestalten

2. Erkläre anhand eines Beispiels wie Vererbung funktioniert

Antwort:
Stell dir vor, du hast ein Autohaus das bedeutet
du möchtest dir schnell eine liste anfertigen mit allen fahrzeugen
und allen details die ist recht einfach mit klassen zu bewältigen in dem du zbs sagst,
deine Klasse Autohaus hat die Atribute (var marke:String,var kfzArt:String) und diese deklarierst du als offen
damit du in der klasse KFZ die Atribute von Autohaus erbst das wäre in dem bsp
klasse KFZ (marke:String,kfzArt:String,var farbe:String):Autohaus(marke,kfzArt)
jetzt hast du die möglichkeit eine liste zu erstellen im autohaus mit deinen KFZs

3.Was ist der Unterschied zwischen Wert- und Referenztypen?

Antwort:
Werttypen sind Datentypen, die die eigentlichen Daten innerhalb ihrer eigenen Speicherzuweisung enthalten.
Referenztypen hingegen speichern einen Verweis auf die Daten und nicht die Daten selbst.
Das heißt, wenn Sie eine Variable vom Referenztyp erstellen, erstellen Sie eigentlich einen Zeiger auf die Daten und nicht die Daten selbst.

4. Kann ich in folgenden Fällen Werte hinzufügen/entfernen oder verändern? Warum?

Antwort 1:
ich kann der Collection einen weiteren wert übergeben da es sich hier um eine Mutablen liste handelt
zu dem könnte man auch etwas komplet anderes in die variable übernehmen zbs. zahlen = 20 da es eine variable ist, kann ich jeder zeit den wert der variable ändern

Antwort 2:
Hier haben wir wieder eine variable in der ich den wert verändern kann derzeit ist sie mit einer list belegt die ich nicht verändern kann da eine liste immer vordefiniert ist
in mutablen listen hingegen kann etwas hinzugefügt oder entfernt werden

antwort 3:
die ist eine value das bedeute ich kann sie im Nachhinein nicht noch einmal verändern
sie ist mit einer mutablen liste belegt die ich aber dennoch ändern kann

antwort 4:
hier haben wir wieder eine value die im nachgang nicht verändert werden kann genauso wie eine liste da sie ja wie in antwort 2 immer vordefiniert ist
